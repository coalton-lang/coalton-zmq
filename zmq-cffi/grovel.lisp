;;;; zmq-cffi/grovel.lisp

(in-package #:zmq-cffi)

(include "zmq.h")

(cc-flags "-DZMQ_BUILD_DRAFT_API")

;; Types.
(ctype size-t      "size_t")
(ctype uint8-t     "uint8_t")
;; (ctype zmq-free-fn "zmq_free_fn")
(ctype zmq-fd-t    "zmq_fd_t")
;; (ctype zmq-timer-fn "zmq_timer_fn")
(ctype uint32-t    "uint32_t")
(ctype uint64-t    "uint64_t")
#-WIN32 (cstruct sigset-t "sigset_t")
(cstruct zmq-msg-t "zmq_msg_t")
(cstruct zmq-pollitem-t "zmq_pollitem_t"
         (socket  "socket"  :type (:pointer :void))
         (fd      "fd"      :type zmq-fd-t)
         (events  "events"  :type :short)
         (revents "revents" :type :short))
(cstruct zmq-poller-event-t "zmq_poller_event_t"
         (socket    "socket"    :type (:pointer :void))
         (fd        "fd"        :type zmq-fd-t)
         (user-data "user_data" :type (:pointer :void))
         (events    "events"    :type :short))

;; Version.
(constant (zmq-version-major "ZMQ_VERSION_MAJOR"))
(constant (zmq-version-minor "ZMQ_VERSION_MINOR"))
(constant (zmq-version-patch "ZMQ_VERSION_PATCH"))
(constant (zmq-version       "ZMQ_VERSION"))

;; Errors.
(constant (enotsup         "ENOTSUP"))
(constant (eprotonosupport "EPROTONOSUPPORT"))
(constant (enobufs         "ENOBUFS"))
(constant (enetdown        "ENETDOWN"))
(constant (eaddrinuse      "EADDRINUSE"))
(constant (eaddrnotavail   "EADDRNOTAVAIL"))
(constant (econnrefused    "ECONNREFUSED"))
(constant (einprogress     "EINPROGRESS"))
(constant (enotsock        "ENOTSOCK"))
(constant (emsgsize        "EMSGSIZE"))
(constant (eafnosupport    "EAFNOSUPPORT"))
(constant (enetunreach     "ENETUNREACH"))
(constant (econnaborted    "ECONNABORTED"))
(constant (econnreset      "ECONNRESET"))
(constant (enotconn        "ENOTCONN"))
(constant (etimedout       "ETIMEDOUT"))
(constant (ehostunreach    "EHOSTUNREACH"))
(constant (enetreset       "ENETRESET"))

;; Native errors.
(constant (efsm           "EFSM"))
(constant (enocompatproto "ENOCOMPATPROTO"))
(constant (eterm          "ETERM"))
(constant (emthread       "EMTHREAD"))

;; Context options.
(constant (zmq-io-threads                 "ZMQ_IO_THREADS"))
(constant (zmq-max-sockets                "ZMQ_MAX_SOCKETS"))
(constant (zmq-socket-limit               "ZMQ_SOCKET_LIMIT"))
(constant (zmq-thread-priority            "ZMQ_THREAD_PRIORITY"))
(constant (zmq-thread-sched-policy        "ZMQ_THREAD_SCHED_POLICY"))
(constant (zmq-max-msgsz                  "ZMQ_MAX_MSGSZ"))
(constant (zmq-msg-t-size                 "ZMQ_MSG_T_SIZE"))
(constant (zmq-thread-affinity-cpu-add    "ZMQ_THREAD_AFFINITY_CPU_ADD"))
(constant (zmq-thread-affinity-cpu-remove "ZMQ_THREAD_AFFINITY_CPU_REMOVE"))
(constant (zmq-thread-name-prefix         "ZMQ_THREAD_NAME_PREFIX"))
(constant (zmq-io-threads-dflt          "ZMQ_IO_THREADS_DFLT"))
(constant (zmq-max-sockets_dflt         "ZMQ_MAX_SOCKETS_DFLT"))
(constant (zmq-thread-priority-dflt     "ZMQ_THREAD_PRIORITY_DFLT"))
(constant (zmq-thread-sched-policy-dflt "ZMQ_THREAD_SCHED_POLICY_DFLT"))

;;; Socket types.
(constant (zmq-pair   "ZMQ_PAIR"))
(constant (zmq-pub    "ZMQ_PUB"))
(constant (zmq-sub    "ZMQ_SUB"))
(constant (zmq-req    "ZMQ_REQ"))
(constant (zmq-rep    "ZMQ_REP"))
(constant (zmq-dealer "ZMQ_DEALER"))
(constant (zmq-router "ZMQ_ROUTER"))
(constant (zmq-pull   "ZMQ_PULL"))
(constant (zmq-push   "ZMQ_PUSH"))
(constant (zmq-xpub   "ZMQ_XPUB"))
(constant (zmq-xsub   "ZMQ_XSUB"))
(constant (zmq-stream "ZMQ_STREAM"))

;; Socket options.
(constant (zmq-affinity                          "ZMQ_AFFINITY"))
(constant (zmq-routing-id                        "ZMQ_ROUTING_ID"))
(constant (zmq-subscribe                         "ZMQ_SUBSCRIBE"))
(constant (zmq-unsubscribe                       "ZMQ_UNSUBSCRIBE"))
(constant (zmq-rate                              "ZMQ_RATE"))
(constant (zmq-recovery-ivl                      "ZMQ_RECOVERY_IVL"))
(constant (zmq-sndbuf                            "ZMQ_SNDBUF"))
(constant (zmq-rcvbuf                            "ZMQ_RCVBUF"))
(constant (zmq-rcvmore                           "ZMQ_RCVMORE"))
(constant (zmq-fd                                "ZMQ_FD"))
(constant (zmq-events                            "ZMQ_EVENTS"))
(constant (zmq-type                              "ZMQ_TYPE"))
(constant (zmq-linger                            "ZMQ_LINGER"))
(constant (zmq-reconnect-ivl                     "ZMQ_RECONNECT_IVL"))
(constant (zmq-backlog                           "ZMQ_BACKLOG"))
(constant (zmq-reconnect-ivl-max                 "ZMQ_RECONNECT_IVL_MAX"))
(constant (zmq-maxmsgsize                        "ZMQ_MAXMSGSIZE"))
(constant (zmq-sndhwm                            "ZMQ_SNDHWM"))
(constant (zmq-rcvhwm                            "ZMQ_RCVHWM"))
(constant (zmq-multicast-hops                    "ZMQ_MULTICAST_HOPS"))
(constant (zmq-rcvtimeo                          "ZMQ_RCVTIMEO"))
(constant (zmq-sndtimeo                          "ZMQ_SNDTIMEO"))
(constant (zmq-last-endpoint                     "ZMQ_LAST_ENDPOINT"))
(constant (zmq-router-mandatory                  "ZMQ_ROUTER_MANDATORY"))
(constant (zmq-tcp-keepalive                     "ZMQ_TCP_KEEPALIVE"))
(constant (zmq-tcp-keepalive-cnt                 "ZMQ_TCP_KEEPALIVE_CNT"))
(constant (zmq-tcp-keepalive-idle                "ZMQ_TCP_KEEPALIVE_IDLE"))
(constant (zmq-tcp-keepalive-intvl               "ZMQ_TCP_KEEPALIVE_INTVL"))
(constant (zmq-immediate                         "ZMQ_IMMEDIATE"))
(constant (zmq-xpub-verbose                      "ZMQ_XPUB_VERBOSE"))
(constant (zmq-router-raw                        "ZMQ_ROUTER_RAW"))
(constant (zmq-ipv6                              "ZMQ_IPV6"))
(constant (zmq-mechanism                         "ZMQ_MECHANISM"))
(constant (zmq-plain-server                      "ZMQ_PLAIN_SERVER"))
(constant (zmq-plain-username                    "ZMQ_PLAIN_USERNAME"))
(constant (zmq-plain-password                    "ZMQ_PLAIN_PASSWORD"))
(constant (zmq-curve-server                      "ZMQ_CURVE_SERVER"))
(constant (zmq-curve-publickey                   "ZMQ_CURVE_PUBLICKEY"))
(constant (zmq-curve-secretkey                   "ZMQ_CURVE_SECRETKEY"))
(constant (zmq-curve-serverkey                   "ZMQ_CURVE_SERVERKEY"))
(constant (zmq-probe-router                      "ZMQ_PROBE_ROUTER"))
(constant (zmq-req-correlate                     "ZMQ_REQ_CORRELATE"))
(constant (zmq-req-relaxed                       "ZMQ_REQ_RELAXED"))
(constant (zmq-conflate                          "ZMQ_CONFLATE"))
(constant (zmq-zap-domain                        "ZMQ_ZAP_DOMAIN"))
(constant (zmq-router-handover                   "ZMQ_ROUTER_HANDOVER"))
(constant (zmq-tos                               "ZMQ_TOS"))
(constant (zmq-connect-routing-id                "ZMQ_CONNECT_ROUTING_ID"))
(constant (zmq-gssapi-server                     "ZMQ_GSSAPI_SERVER"))
(constant (zmq-gssapi-principal                  "ZMQ_GSSAPI_PRINCIPAL"))
(constant (zmq-gssapi-service-principal          "ZMQ_GSSAPI_SERVICE_PRINCIPAL"))
(constant (zmq-gssapi-plaintext                  "ZMQ_GSSAPI_PLAINTEXT"))
(constant (zmq-handshake-ivl                     "ZMQ_HANDSHAKE_IVL"))
(constant (zmq-socks-proxy                       "ZMQ_SOCKS_PROXY"))
(constant (zmq-xpub-nodrop                       "ZMQ_XPUB_NODROP"))
(constant (zmq-blocky                            "ZMQ_BLOCKY"))
(constant (zmq-xpub-manual                       "ZMQ_XPUB_MANUAL"))
(constant (zmq-xpub-welcome-msg                  "ZMQ_XPUB_WELCOME_MSG"))
(constant (zmq-stream-notify                     "ZMQ_STREAM_NOTIFY"))
(constant (zmq-invert-matching                   "ZMQ_INVERT_MATCHING"))
(constant (zmq-heartbeat-ivl                     "ZMQ_HEARTBEAT_IVL"))
(constant (zmq-heartbeat-ttl                     "ZMQ_HEARTBEAT_TTL"))
(constant (zmq-heartbeat-timeout                 "ZMQ_HEARTBEAT_TIMEOUT"))
(constant (zmq-xpub-verboser                     "ZMQ_XPUB_VERBOSER"))
(constant (zmq-connect-timeout                   "ZMQ_CONNECT_TIMEOUT"))
(constant (zmq-tcp-maxrt                         "ZMQ_TCP_MAXRT"))
(constant (zmq-thread-safe                       "ZMQ_THREAD_SAFE"))
(constant (zmq-multicast-maxtpdu                 "ZMQ_MULTICAST_MAXTPDU"))
(constant (zmq-vmci-buffer-size                  "ZMQ_VMCI_BUFFER_SIZE"))
(constant (zmq-vmci-buffer-min-size              "ZMQ_VMCI_BUFFER_MIN_SIZE"))
(constant (zmq-vmci-buffer-max-size              "ZMQ_VMCI_BUFFER_MAX_SIZE"))
(constant (zmq-vmci-connect-timeout              "ZMQ_VMCI_CONNECT_TIMEOUT"))
(constant (zmq-use-fd                            "ZMQ_USE_FD"))
(constant (zmq-gssapi-principal-nametype         "ZMQ_GSSAPI_PRINCIPAL_NAMETYPE"))
(constant (zmq-gssapi-service-principal-nametype "ZMQ_GSSAPI_SERVICE_PRINCIPAL_NAMETYPE"))
(constant (zmq-bindtodevice                      "ZMQ_BINDTODEVICE"))

;; Message options.
(constant (zmq-more   "ZMQ_MORE"))
(constant (zmq-shared "ZMQ_SHARED"))

;; Send and recv options
(constant (zmq-dontwait "ZMQ_DONTWAIT"))
(constant (zmq-sndmore "ZMQ_SNDMORE"))

;; Security mechanisms.
(constant (zmq-null   "ZMQ_NULL"))
(constant (zmq-plain  "ZMQ_PLAIN"))
(constant (zmq-curve  "ZMQ_CURVE"))
(constant (zmq-gssapi "ZMQ_GSSAPI"))

;; Radio-dish protocol.
(constant (zmq-group-max-length "ZMQ_GROUP_MAX_LENGTH"))

;; Deprecated options and aliases.
(constant (zmq-identity                "ZMQ_IDENTITY"))
(constant (zmq-connect-rid             "ZMQ_CONNECT_RID"))
(constant (zmq-tcp-accept-filter       "ZMQ_TCP_ACCEPT_FILTER"))
(constant (zmq-ipc-filter-pid          "ZMQ_IPC_FILTER_PID"))
(constant (zmq-ipc-filter-uid          "ZMQ_IPC_FILTER_UID"))
(constant (zmq-ipc-filter-gid          "ZMQ_IPC_FILTER_GID"))
(constant (zmq-ipv4only                "ZMQ_IPV4ONLY"))
(constant (zmq-delay-attach-on-connect "ZMQ_DELAY_ATTACH_ON_CONNECT"))
(constant (zmq-noblock                 "ZMQ_NOBLOCK"))
(constant (zmq-fail-unroutable         "ZMQ_FAIL_UNROUTABLE"))
(constant (zmq-router-behavior         "ZMQ_ROUTER_BEHAVIOR"))

;; Deprecated message options.
(constant (zmq-srcfd "ZMQ_SRCFD"))

(constant (zmq-gssapi-nt-hostbased      "ZMQ_GSSAPI_NT_HOSTBASED"))
(constant (zmq-gssapi-nt-user-name      "ZMQ_GSSAPI_NT_USER_NAME"))
(constant (zmq-gssapi-nt-krb5-principal "ZMQ_GSSAPI_NT_KRB5_PRINCIPAL"))

;; Socket transport events.
(constant (zmq-event-connected                  "ZMQ_EVENT_CONNECTED"))
(constant (zmq-event-connect-delayed            "ZMQ_EVENT_CONNECT_DELAYED"))
(constant (zmq-event-connect-retried            "ZMQ_EVENT_CONNECT_RETRIED"))
(constant (zmq-event-listening                  "ZMQ_EVENT_LISTENING"))
(constant (zmq-event-bind-failed                "ZMQ_EVENT_BIND_FAILED"))
(constant (zmq-event-accepted                   "ZMQ_EVENT_ACCEPTED"))
(constant (zmq-event-accept-failed              "ZMQ_EVENT_ACCEPT_FAILED"))
(constant (zmq-event-closed                     "ZMQ_EVENT_CLOSED"))
(constant (zmq-event-close-failed               "ZMQ_EVENT_CLOSE_FAILED"))
(constant (zmq-event-disconnected               "ZMQ_EVENT_DISCONNECTED"))
(constant (zmq-event-monitor-stopped            "ZMQ_EVENT_MONITOR_STOPPED"))
(constant (zmq-event-all                        "ZMQ_EVENT_ALL"))
(constant (zmq-event-handshake-failed-no-detail "ZMQ_EVENT_HANDSHAKE_FAILED_NO_DETAIL"))
(constant (zmq-event-handshake-succeeded        "ZMQ_EVENT_HANDSHAKE_SUCCEEDED"))
(constant (zmq-event-handshake-failed-protocol  "ZMQ_EVENT_HANDSHAKE_FAILED_PROTOCOL"))
(constant (zmq-event-handshake-failed-auth      "ZMQ_EVENT_HANDSHAKE_FAILED_AUTH"))

;; Protocol errors.
(constant (zmq-protocol-error-zmtp-unspecified                   "ZMQ_PROTOCOL_ERROR_ZMTP_UNSPECIFIED"))
(constant (zmq-protocol-error-zmtp-unexpected-command            "ZMQ_PROTOCOL_ERROR_ZMTP_UNEXPECTED_COMMAND"))
(constant (zmq-protocol-error-zmtp-invalid-sequence              "ZMQ_PROTOCOL_ERROR_ZMTP_INVALID_SEQUENCE"))
(constant (zmq-protocol-error-zmtp-key-exchange                  "ZMQ_PROTOCOL_ERROR_ZMTP_KEY_EXCHANGE"))
(constant (zmq-protocol-error-zmtp-malformed-command-unspecified "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_UNSPECIFIED"))
(constant (zmq-protocol-error-zmtp-malformed-command-message     "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_MESSAGE"))
(constant (zmq-protocol-error-zmtp-malformed-command-hello       "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_HELLO"))
(constant (zmq-protocol-error-zmtp-malformed-command-initiate    "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_INITIATE"))
(constant (zmq-protocol-error-zmtp-malformed-command-error       "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_ERROR"))
(constant (zmq-protocol-error-zmtp-malformed-command-ready       "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_READY"))
(constant (zmq-protocol-error-zmtp-malformed-command-welcome     "ZMQ_PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_WELCOME"))
(constant (zmq-protocol-error-zmtp-invalid-metadata              "ZMQ_PROTOCOL_ERROR_ZMTP_INVALID_METADATA"))
(constant (zmq-protocol-error-zmtp-cryptographic                 "ZMQ_PROTOCOL_ERROR_ZMTP_CRYPTOGRAPHIC"))
(constant (zmq-protocol-error-zmtp-mechanism-mismatch            "ZMQ_PROTOCOL_ERROR_ZMTP_MECHANISM_MISMATCH"))
(constant (zmq-protocol-error-zap-unspecified                    "ZMQ_PROTOCOL_ERROR_ZAP_UNSPECIFIED"))
(constant (zmq-protocol-error-zap-malformed-reply                "ZMQ_PROTOCOL_ERROR_ZAP_MALFORMED_REPLY"))
(constant (zmq-protocol-error-zap-bad-request-id                 "ZMQ_PROTOCOL_ERROR_ZAP_BAD_REQUEST_ID"))
(constant (zmq-protocol-error-zap-bad-version                    "ZMQ_PROTOCOL_ERROR_ZAP_BAD_VERSION"))
(constant (zmq-protocol-error-zap-invalid-status-code            "ZMQ_PROTOCOL_ERROR_ZAP_INVALID_STATUS_CODE"))
(constant (zmq-protocol-error-zap-invalid-metadata               "ZMQ_PROTOCOL_ERROR_ZAP_INVALID_METADATA"))
(constant (zmq-protocol-error-ws-unspecified                     "ZMQ_PROTOCOL_ERROR_WS_UNSPECIFIED"))

;; Poll options.
(constant (zmq-pollin  "ZMQ_POLLIN"))
(constant (zmq-pollout "ZMQ_POLLOUT"))
(constant (zmq-pollerr "ZMQ_POLLERR"))
(constant (zmq-pollpri "ZMQ_POLLPRI"))

;;
(constant (zmq-pollitems-dflt "ZMQ_POLLITEMS_DFLT"))

;;
(constant (zmq-has-capabilities "ZMQ_HAS_CAPABILITIES"))

;; Deprecated aliases
(constant (zmq-streamer  "ZMQ_STREAMER"))
(constant (zmq-forwarder "ZMQ_FORWARDER"))
(constant (zmq-queue     "ZMQ_QUEUE"))

;; HERE AND BELOW: DRAFT

;; Draft socket types.
(constant (zmq-server  "ZMQ_SERVER"))
(constant (zmq-client  "ZMQ_CLIENT"))
(constant (zmq-radio   "ZMQ_RADIO"))
(constant (zmq-dish    "ZMQ_DISH"))
(constant (zmq-gather  "ZMQ_GATHER"))
(constant (zmq-scatter "ZMQ_SCATTER"))
(constant (zmq-dgram   "ZMQ_DGRAM"))
(constant (zmq-peer    "ZMQ_PEER"))
(constant (zmq-channel "ZMQ_CHANNEL"))

;; Draft socket options.
(constant (zmq-zap-enforce-domain       "ZMQ_ZAP_ENFORCE_DOMAIN"))
(constant (zmq-loopback-fastpath        "ZMQ_LOOPBACK_FASTPATH"))
(constant (zmq-metadata                 "ZMQ_METADATA"))
(constant (zmq-multicast-loop           "ZMQ_MULTICAST_LOOP"))
(constant (zmq-router-notify            "ZMQ_ROUTER_NOTIFY"))
(constant (zmq-xpub-manual-last-value   "ZMQ_XPUB_MANUAL_LAST_VALUE"))
(constant (zmq-socks-username           "ZMQ_SOCKS_USERNAME"))
(constant (zmq-socks-password           "ZMQ_SOCKS_PASSWORD"))
(constant (zmq-in-batch-size            "ZMQ_IN_BATCH_SIZE"))
(constant (zmq-out-batch-size           "ZMQ_OUT_BATCH_SIZE"))
(constant (zmq-wss-key-pem              "ZMQ_WSS_KEY_PEM"))
(constant (zmq-wss-cert-pem             "ZMQ_WSS_CERT_PEM"))
(constant (zmq-wss-trust-pem            "ZMQ_WSS_TRUST_PEM"))
(constant (zmq-wss-hostname             "ZMQ_WSS_HOSTNAME"))
(constant (zmq-wss-trust-system         "ZMQ_WSS_TRUST_SYSTEM"))
(constant (zmq-only-first-subscribe     "ZMQ_ONLY_FIRST_SUBSCRIBE"))
(constant (zmq-reconnect-stop           "ZMQ_RECONNECT_STOP"))
(constant (zmq-hello-msg                "ZMQ_HELLO_MSG"))
(constant (zmq-disconnect-msg           "ZMQ_DISCONNECT_MSG"))
(constant (zmq-priority                 "ZMQ_PRIORITY"))
(constant (zmq-busy-poll                "ZMQ_BUSY_POLL"))
(constant (zmq-hiccup-msg               "ZMQ_HICCUP_MSG"))
(constant (zmq-xsub-verbose-unsubscribe "ZMQ_XSUB_VERBOSE_UNSUBSCRIBE"))
(constant (zmq-topics-count             "ZMQ_TOPICS_COUNT"))
(constant (zmq-norm-mode                "ZMQ_NORM_MODE"))
(constant (zmq-norm-unicast-nack        "ZMQ_NORM_UNICAST_NACK"))
(constant (zmq-norm-buffer-size         "ZMQ_NORM_BUFFER_SIZE"))
(constant (zmq-norm-segment-size        "ZMQ_NORM_SEGMENT_SIZE"))
(constant (zmq-norm-block-size          "ZMQ_NORM_BLOCK_SIZE"))
(constant (zmq-norm-num-parity          "ZMQ_NORM_NUM_PARITY"))
(constant (zmq-norm-num-autoparity      "ZMQ_NORM_NUM_AUTOPARITY"))
(constant (zmq-norm-push                "ZMQ_NORM_PUSH"))

;; Draft zmq-norm-mode options.
(constant (zmq-norm-fixed       "ZMQ_NORM_FIXED"))
(constant (zmq-norm-cc          "ZMQ_NORM_CC"))
(constant (zmq-norm-ccl         "ZMQ_NORM_CCL"))
(constant (zmq-norm-cce         "ZMQ_NORM_CCE"))
(constant (zmq-norm-cce-ecnonly "ZMQ_NORM_CCE_ECNONLY"))

;; Draft zmq-reconnect-stop options.
(constant (zmq-reconnect-stop-conn-refused     "ZMQ_RECONNECT_STOP_CONN_REFUSED"))
(constant (zmq-reconnect-stop-handshake-failed "ZMQ_RECONNECT_STOP_HANDSHAKE_FAILED"))
(constant (zmq-reconnect-stop-after-disconnect "ZMQ_RECONNECT_STOP_AFTER_DISCONNECT"))

;; Draft context options.
(constant (zmq-zero-copy-recv "ZMQ_ZERO_COPY_RECV"))

;; Draft message property names
;; -- cannot grovel strings --
;; (constant (zmq-msg-property-routing-id   "ZMQ_MSG_PROPERTY_ROUTING_ID"))
;; (constant (zmq-msg-property-socket-type  "ZMQ_MSG_PROPERTY_SOCKET_TYPE"))
;; (constant (zmq-msg-property-user-id      "ZMQ_MSG_PROPERTY_USER_ID"))
;; (constant (zmq-msg-property-peer-address "ZMQ_MSG_PROPERTY_PEER_ADDRESS"))

;; Router notify options.
(constant (zmq-notify-connect    "ZMQ_NOTIFY_CONNECT"))
(constant (zmq-notify-disconnect "ZMQ_NOTIFY_DISCONNECT"))

;; Draft socket monitoring events.
(constant (zmq-event-pipes-states          "ZMQ_EVENT_PIPES_STATS"))
(constant (zmq-current-event-version       "ZMQ_CURRENT_EVENT_VERSION"))
(constant (zmq-current-event-version-draft "ZMQ_CURRENT_EVENT_VERSION_DRAFT"))
(constant (zmq-event-all-v1                "ZMQ_EVENT_ALL_V1"))
(constant (zmq-event-all-v2                "ZMQ_EVENT_ALL_V2"))

